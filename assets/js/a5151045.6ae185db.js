"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7735],{7522:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return m}});var r=a(9901);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=n,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return a?r.createElement(f,o(o({ref:t},s),{},{components:a})):r.createElement(f,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7401:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=a(7538),n=a(3086),i=(a(9901),a(7522)),o=["components"],l={sidebar_position:1},p="@calatrava/datawrapper",c={unversionedId:"packages/datawrapper",id:"packages/datawrapper",title:"@calatrava/datawrapper",description:"The datawrapper package is responsible for handling queries to the underlying DynamoDB table. It is heavily reliant on a single table data structure but it still supports multiple tables in the event you need TTL or other extra Dynamo functionality.",source:"@site/docs/packages/datawrapper.md",sourceDirName:"packages",slug:"/packages/datawrapper",permalink:"/calatrava/docs/packages/datawrapper",editUrl:"https://github.com/cmgriffing/calatrava/tree/main/apps/docs/docs/packages/datawrapper.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Packages Intro",permalink:"/calatrava/docs/packages"},next:{title:"@calatrava/middleware",permalink:"/calatrava/docs/packages/middleware"}},s=[{value:"Details",id:"details",children:[],level:2},{value:"Architect",id:"architect",children:[],level:2},{value:"Repository",id:"repository",children:[],level:2}],u={toc:s};function d(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"calatravadatawrapper"},"@calatrava/datawrapper"),(0,i.kt)("p",null,"The datawrapper package is responsible for handling queries to the underlying DynamoDB table. It is heavily reliant on a single table data structure but it still supports multiple tables in the event you need TTL or other extra Dynamo functionality."),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"The datawrapper is used within the ",(0,i.kt)("inlineCode",{parentName:"p"},"getTables")," middleware."),(0,i.kt)("p",null,"A single table data structure is preferred in many cases. Here are some articles that explain the reasoning:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://aws.amazon.com/blogs/compute/creating-a-single-table-design-with-amazon-dynamodb/"},"https://aws.amazon.com/blogs/compute/creating-a-single-table-design-with-amazon-dynamodb/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.alexdebrie.com/posts/dynamodb-single-table/"},"https://www.alexdebrie.com/posts/dynamodb-single-table/"))),(0,i.kt)("h2",{id:"architect"},"Architect"),(0,i.kt)("p",null,"The data wrapper is an opinionated wrapper around the ",(0,i.kt)("inlineCode",{parentName:"p"},"arc.tables()")," method that allows for type safety. You can read more about the ",(0,i.kt)("inlineCode",{parentName:"p"},"arc.tables()")," helper in the Architect documentation: ",(0,i.kt)("a",{parentName:"p",href:"https://arc.codes/docs/en/reference/runtime-helpers/node.js"},"https://arc.codes/docs/en/reference/runtime-helpers/node.js")),(0,i.kt)("p",null,"Note: No direct link available to the ",(0,i.kt)("inlineCode",{parentName:"p"},"arc.tables()")," function."),(0,i.kt)("h2",{id:"repository"},"Repository"),(0,i.kt)("p",null,"The repository can be found at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cmgriffing/calatrava/tree/main/packages/datawrapper"},"https://github.com/cmgriffing/calatrava/tree/main/packages/datawrapper")))}d.isMDXComponent=!0}}]);